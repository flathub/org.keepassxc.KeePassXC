From ebba8e616b82918c817a9edee35433cb9cf009a5 Mon Sep 17 00:00:00 2001
From: AsavarTzeth <asavartzeth@gmail.com>
Date: Mon, 28 May 2018 21:29:15 +0200
Subject: [PATCH 4/4] Fix KeePassXC-Browser interaction with Flatpak

By default KeePassXC will use the `keepassxc-proxy` program as a proxy
between `keepassxc` and a browser. The problem is that KeePassXC
assumes the absolute path of this proxy is reachable by the browser.

In the case of Flatpak, KeePassXC thinks this path is:
"/app/bin/keepassxc-proxy"

In a Flatpak all app files are installed in the `/app` prefix. At
runtime this is mounted inside a container and otherwise unavailable.
Because the Native Messaging API demands an absolute path, without any
parameters, `flatpak run --command=keepassxc-proxy` cannot be used.

Luckily Flatpak exports a wrapper script for all apps installed. In the
default system-wide installation this would be located at:
"/var/lib/flatpak/exports/bin/org.keepassxc.KeePassXC".

If a user has installed the Flatpak elsewhere, like in a user specific
installation (--user), it is still possible to enter a custom proxy
path. It is then assumed the user knows where the wrapper is located.
---
 src/browser/HostInstaller.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/browser/HostInstaller.cpp b/src/browser/HostInstaller.cpp
index 9b27ab1c..66e911f9 100644
--- a/src/browser/HostInstaller.cpp
+++ b/src/browser/HostInstaller.cpp
@@ -169,6 +169,12 @@ QJsonObject HostInstaller::constructFile(SupportedBrowsers browser, const bool&
     } else {
         path = QProcessEnvironment::systemEnvironment().value("APPIMAGE");
     }
+#elif defined KEEPASSXC_DIST_FLATPAK
+    if (proxy && !location.isEmpty()) {
+        path = location;
+    } else {
+        path = "/var/lib/flatpak/exports/bin/org.keepassxc.KeePassXC";
+    }
 #else
     if (proxy) {
         if (!location.isEmpty()) {
-- 
2.17.1

