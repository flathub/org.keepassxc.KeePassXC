From 43563b4321bdad77527c6fe3b0c44103cac3153d Mon Sep 17 00:00:00 2001
From: AsavarTzeth <asavartzeth@gmail.com>
Date: Sun, 27 Mar 2022 14:44:41 +0200
Subject: [PATCH 4/4] Flatpak: Support sandboxed attachment opening

Ensure that xdg portals can open attachment files, while simultaneously
removing the only critical need for global /tmp access.

The path: $XDG_RUNTIME_DIR/app/$FLATPAK_ID is used for flatpak because
it exists, respects XDG standards and is host accessible by default.

- Fix attachment opening from a flatpak style sandbox
- Respect $XDG_RUNTIME_DIR when available
- Remove need for needlessly exposing the host /tmp
---
 src/core/EntryAttachments.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/core/EntryAttachments.cpp b/src/core/EntryAttachments.cpp
index eeeb6fb2..90a5ac57 100644
--- a/src/core/EntryAttachments.cpp
+++ b/src/core/EntryAttachments.cpp
@@ -17,6 +17,7 @@
 
 #include "EntryAttachments.h"
 
+#include "config-keepassx.h"
 #include "core/Global.h"
 #include "crypto/Random.h"
 
@@ -218,9 +219,13 @@ bool EntryAttachments::openAttachment(const QString& key, QString* errorMessage)
         const QByteArray attachmentData = value(key);
         auto ext = key.contains(".") ? "." + key.split(".").last() : "";
 
-#ifdef KEEPASSXC_DIST_SNAP
+#if defined(KEEPASSXC_DIST_SNAP)
         const QString tmpFileTemplate =
             QString("%1/XXXXXXXXXXXX%2").arg(QProcessEnvironment::systemEnvironment().value("SNAP_USER_DATA"), ext);
+#elif defined(KEEPASSXC_DIST_FLATPAK)
+        const QString tmpFileTemplate =
+            QString("%1/app/%2/XXXXXXXXXXXX%3").arg(QStandardPaths::writableLocation(QStandardPaths::RuntimeLocation),
+                "org.keepassxc.KeePassXC", ext);
 #else
         const QString tmpFileTemplate = QDir::temp().absoluteFilePath(QString("XXXXXXXXXXXX").append(ext));
 #endif
-- 
2.35.1

